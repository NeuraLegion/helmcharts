name: Auto-merge Brokencrystals Update PRs

on:
  schedule:
    # Run every 5 minutes
    - cron: '50 23 * * *'
  # Manual trigger option
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to auto-merge'
        required: false
        type: string

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Find the PR to merge
      - name: Get PR details
        id: get-pr
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ inputs.pr_number }}" ]]; then
            PR_NUMBER="${{ inputs.pr_number }}"
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "Using manually provided PR number: $PR_NUMBER"
          else
            # Find open PRs with "[BC update]" in the title created by GitHub Actions
            PR_DATA=$(gh pr list --search "[BC update] in:title author:app/github-actions" --state open --json number,title --limit 1)
            PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number')
            PR_TITLE=$(echo "$PR_DATA" | jq -r '.[0].title')
            
            if [[ -n "$PR_NUMBER" && "$PR_NUMBER" != "null" ]]; then
              echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
              echo "Found matching PR #$PR_NUMBER: $PR_TITLE"
            else
              echo "No matching PRs found to merge"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Skip approval and try direct merge
      - name: Merge PR
        if: steps.get-pr.outputs.pr_number != ''
        run: |
          PR_NUMBER="${{ steps.get-pr.outputs.pr_number }}"
          
          # Wait a bit for checks to complete
          echo "Waiting 60 seconds for any checks to complete..."
          sleep 60
          
          # Add a comment instead of an approval
          gh pr comment $PR_NUMBER --body "Auto-merge workflow is attempting to merge this PR."
          
          # Check PR status
          PR_STATUS=$(gh pr view $PR_NUMBER --json state,mergeable,mergeStateStatus --jq '.state + "," + (.mergeable|tostring) + "," + .mergeStateStatus')
          echo "PR status: $PR_STATUS"
          
          # Try to merge the PR
          if gh pr merge $PR_NUMBER --squash --delete-branch; then
            echo "Successfully merged PR #$PR_NUMBER"
          else
            echo "Failed to merge PR #$PR_NUMBER. Current status: $PR_STATUS"
            echo "This might be due to failing checks or branch protection rules."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
