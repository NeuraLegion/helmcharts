{{- $repeaterIDs := (or (and (hasKey .Values "global") .Values.global.repeaterIDs) (compact (list .Values.repeaterID))) }}
{{- $token := (or (and (hasKey .Values "global") .Values.global.token) .Values.token) }}
{{- $cluster := (or (and (hasKey .Values "global") .Values.global.cluster) .Values.cluster) }}
{{- $timeout := (or (and (hasKey .Values "global") .Values.global.timeout) .Values.timeout "30000") }}
{{- $repeaterImageTag := (or (and (hasKey .Values "global") .Values.global.repeaterImageTag) .Values.repeaterImageTag "latest") }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ .Release.Name }}
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "sqli"
            - "mariadb"
            - "curl-container"
      containers:
        - name: sqli
          image: brightsec/sqli-lab
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - |
                    sleep 20 && /usr/bin/curl http://localhost/sql-connections/setup-db.php 
          volumeMounts:
            - name: {{ .Release.Name }}-db-connection
              mountPath: /app/public/sql-connections/db-creds.inc
              subPath: db-creds.inc
              readOnly: true     
          env:
            - name: DB_HOST
              value: "mariadb"
            - name: DB_NAME
              value: "security"
            - name: DB_USER
              value: "euiti"
            - name: DB_PASS
              value: "euiti2019"

            # Settings of php.ini
            - name: PHP_SHORT_OPEN_TAG
              value: "On"
            - name: PHP_ERROR_REPORTING
              value: "E_ALL"
            - name: PHP_DISPLAY_ERRORS
              value: "On"
            - name: PHP_HTML_ERRORS
              value: "On"
            - name: PHP_XDEBUG_ENABLED
              value: "true"  
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              memory: 1024Mi
          livenessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 30

        - name: mariadb
          image: mariadb
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "euiti2019"
            - name: MYSQL_ROOT_HOST
              value: "%"
            - name: MYSQL_DATABASE
              value: "security"
            - name: MYSQL_USER
              value: "euiti"
            - name: MYSQL_PASSWORD  
              value: "euiti2019" 
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              memory: 512Mi
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            periodSeconds: 30
          volumeMounts:
            - name: {{ .Release.Name }}-mariadb
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf
              readOnly: true
                   
        - name: curl-container
          image: curlimages/curl:latest
          command: ["sh", "-c", "sleep 30 && curl -k -s http://sqli/sql-connections/setup-db.php && sleep 36000000000"]
 #         livenessProbe:
 #           exec:
 #             command: ["sh", "-c", "curl -k -s http://sqli/Less-1/?id=12"]
 #           initialDelaySeconds: 120
 #           periodSeconds: 60
        {{- if and $token $cluster }}
        {{- range $index, $repeaterID := $repeaterIDs }}
        - name: repeater-{{ $index }}
          image: brightsec/cli:{{ $repeaterImageTag }}
          command: ["bright-cli", "repeater"]
          args:
            - "--token=$(TOKEN)"
            - "--id=$(REPEATER_ID)"
            - "--cluster=$(CLUSTER)"
            - "--timeout=$(TIMEOUT)"
            - "--log-level=verbose"
          resources:
            requests:
              cpu: 200m
              memory: 100Mi
          env:
            - name: REPEATER_ID
              value: "{{ $repeaterID }}"
            - name: TOKEN
              value: "{{ $token }}"
            - name: CLUSTER
              value: "{{ $cluster }}"
            - name: TIMEOUT
              value: "{{ $timeout }}"
        {{- end }}
        {{- end }} 
      restartPolicy: Always  

      volumes:
        - name: {{ .Release.Name }}-db-connection
          configMap:
            name: {{ .Release.Name }}-db-connection
        - name: {{ .Release.Name }}-mariadb
          configMap:
            name: {{ .Release.Name }}-mariadb
