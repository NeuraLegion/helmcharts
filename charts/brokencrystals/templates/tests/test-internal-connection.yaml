apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-internal-connection"
  namespace: "{{ .Release.Namespace }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  containers:
    - name: test
      image: python:3
      command: ["/bin/sh", "-c"]
      args:
        - |
          cat <<EOF > /tmp/check_availability.py
          import urllib.request
          import sys

          def check_availability(url: str):
            print(f"🔍 Checking application availability at {url}")

            try:
              with urllib.request.urlopen(url, timeout=10) as response:
                if response.status == 200:
                  print(f"✅ Application is available at {url}")
                else:
                  print(f"❌ Application returned status code {response.status}")
                  sys.exit(1)
            except urllib.error.URLError as e:
              print(f"🚨 Error checking application availability: {e}")
              sys.exit(1)

          internal_url = "http://{{ .Release.Name }}:3000"
          check_availability(internal_url)

          public_url = "https://{{ .Values.ingress.url }}"
          check_availability(public_url)

          sys.exit(0)
          EOF
          python /tmp/check_availability.py
  restartPolicy: Never
