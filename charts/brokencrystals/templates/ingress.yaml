{{- if and .Values.ingress.enabled .Values.ingress.url -}}
{{- $fullName := include "brokencrystals.fullname" . -}}
{{- $ingressClass := .Values.ingress.className | default "nginx" -}}
{{- $pathType := .Values.ingress.pathType | default "Prefix" -}}
{{- $globalAnnotations := .Values.ingress.annotations | default dict -}}

{{/* Main Application Ingress */}}
{{- if .Values.ingress.main.enabled | default true -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "brokencrystals.labels" . | nindent 4 }}
  annotations:
    {{- if $globalAnnotations }}
    {{- toYaml $globalAnnotations | nindent 4 }}
    {{- end }}
    {{- if .Values.ingress.main.annotations }}
    {{- range $key, $value := .Values.ingress.main.annotations }}
    {{- if eq $ingressClass "nginx" }}
    {{- if hasPrefix "nginx.ingress.kubernetes.io" $key }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- else }}
    {{- if not (hasPrefix "nginx.ingress.kubernetes.io" $key) }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.autoGenerate (eq .Values.ingress.cert "") }}
    cert-manager.io/cluster-issuer: letsencrypt-cf-prod
    {{- end }}
spec:
  {{- if $ingressClass }}
  ingressClassName: {{ $ingressClass }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.main.host | default .Values.ingress.url }}
      secretName: {{ if eq .Values.ingress.cert "" }}{{ $fullName }}-brokencrystals-secret{{ else }}{{ .Values.ingress.cert }}{{ end }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.main.host | default .Values.ingress.url }}
      http:
        paths:
          - path: {{ .Values.ingress.main.path | default "/" }}
            pathType: {{ $pathType }}
            backend:
              service:
                name: {{ .Release.Name }}
                port:
                  number: {{ .Values.ingress.main.servicePort | default 3000 }}
{{- end }}

{{/* Keycloak Ingress */}}
{{- if .Values.ingress.keycloak.enabled | default true -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-keycloak
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "brokencrystals.labels" . | nindent 4 }}
  annotations:
    {{- if $globalAnnotations }}
    {{- toYaml $globalAnnotations | nindent 4 }}
    {{- end }}
    {{- if .Values.ingress.keycloak.annotations }}
    {{- range $key, $value := .Values.ingress.keycloak.annotations }}
    {{- if eq $ingressClass "nginx" }}
    {{- if hasPrefix "nginx.ingress.kubernetes.io" $key }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- else }}
    {{- if not (hasPrefix "nginx.ingress.kubernetes.io" $key) }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.autoGenerate (eq .Values.ingress.cert "") }}
    cert-manager.io/cluster-issuer: letsencrypt-cf-prod
    {{- end }}
spec:
  {{- if $ingressClass }}
  ingressClassName: {{ $ingressClass }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.keycloak.host | default (printf "auth%s%s" .Values.ingress.authlevel .Values.ingress.url) }}
      secretName: {{ if eq .Values.ingress.cert "" }}{{ $fullName }}-brokencrystals-keycloak-secret{{ else }}{{ .Values.ingress.cert }}{{ end }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.keycloak.host | default (printf "auth%s%s" .Values.ingress.authlevel .Values.ingress.url) }}
      http:
        paths:
          - path: {{ .Values.ingress.keycloak.path | default "/" }}
            pathType: {{ $pathType }}
            backend:
              service:
                name: {{ .Release.Name }}-keycloak
                port:
                  number: {{ .Values.ingress.keycloak.servicePort | default 8080 }}
{{- end }}

{{/* Mailcatcher Ingress */}}
{{- if and .Values.useMailcatcher (.Values.ingress.mailcatcher.enabled | default true) -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-mailcatcher
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "brokencrystals.labels" . | nindent 4 }}
  annotations:
    {{- if $globalAnnotations }}
    {{- toYaml $globalAnnotations | nindent 4 }}
    {{- end }}
    {{- if .Values.ingress.mailcatcher.annotations }}
    {{- range $key, $value := .Values.ingress.mailcatcher.annotations }}
    {{- if eq $ingressClass "nginx" }}
    {{- if hasPrefix "nginx.ingress.kubernetes.io" $key }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- else }}
    {{- if not (hasPrefix "nginx.ingress.kubernetes.io" $key) }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.autoGenerate (eq .Values.ingress.cert "") }}
    cert-manager.io/cluster-issuer: letsencrypt-cf-prod
    {{- end }}
spec:
  {{- if $ingressClass }}
  ingressClassName: {{ $ingressClass }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.mailcatcher.host | default (printf "mailcatcher-%s" .Values.ingress.url) }}
      secretName: {{ if eq .Values.ingress.cert "" }}{{ $fullName }}-mailcatcher-secret{{ else }}{{ .Values.ingress.cert }}{{ end }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.mailcatcher.host | default (printf "mailcatcher-%s" .Values.ingress.url) }}
      http:
        paths:
          - path: {{ .Values.ingress.mailcatcher.path | default "/" }}
            pathType: {{ $pathType }}
            backend:
              service:
                name: {{ .Release.Name }}-mailcatcher
                port:
                  number: {{ .Values.ingress.mailcatcher.servicePort | default 1080 }}
{{- end }}
{{- end }}
